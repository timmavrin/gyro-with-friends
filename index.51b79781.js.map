{"mappings":"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","sources":["<anon>","src/index.ts","src/pages/lobby/lobby.ts","src/helpers.ts"],"sourcesContent":["(function () {\nconst $012f0d18ed44dc05$export$185802fd694ee1f5 = (tag, options)=>{\n    const element = document.createElement(tag);\n    Object.assign(element, options);\n    return element;\n};\nconst $012f0d18ed44dc05$export$d41d9ab3de2def3d = (s)=>{\n    return s.split(\"\").reduce((a, b)=>{\n        a = (a << 5) - a + b.charCodeAt(0);\n        return a & a;\n    }, 0);\n};\nconst $012f0d18ed44dc05$export$14996f967075610b = ()=>fetch(\"https://checkip.amazonaws.com/\").then((r)=>r.text());\n\n\nconst $2e227c3de0f0a244$var$hostConnection = new RTCPeerConnection({\n    iceServers: []\n});\nconst $2e227c3de0f0a244$var$hostChannel = $2e227c3de0f0a244$var$hostConnection.createDataChannel(\"dc\");\n$2e227c3de0f0a244$var$hostConnection.addEventListener(\"connectionstatechange\", (e)=>{\n    console.log(\"Connection State Change: \", e);\n    document.querySelector(\"#peer-container\")?.append((0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"p\", {\n        className: \"peer\",\n        innerText: e.target.connectionState\n    }));\n});\n$2e227c3de0f0a244$var$hostConnection.addEventListener(\"signalingstatechange\", (e)=>{\n    console.log(\"Signal State Change: \", e);\n});\n$2e227c3de0f0a244$var$hostConnection.addEventListener(\"negotiationneeded\", (e)=>{\n    console.log(\"Negotiation Needed: \", e);\n});\n$2e227c3de0f0a244$var$hostChannel.addEventListener(\"open\", (e)=>{\n    console.log(\"Host Opened\", e);\n    document.querySelector(\"#peer-container\")?.append((0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"p\", {\n        innerText: \"peer\",\n        className: \"peer\"\n    }));\n});\n$2e227c3de0f0a244$var$hostChannel.addEventListener(\"message\", (e)=>{\n    console.log(\"Data channel message\", e);\n});\nconst $2e227c3de0f0a244$var$joinConnection = new RTCPeerConnection({\n    iceServers: []\n});\nconst $2e227c3de0f0a244$var$joinChannel = $2e227c3de0f0a244$var$joinConnection.createDataChannel(\"dc\");\n$2e227c3de0f0a244$var$joinChannel.addEventListener(\"open\", (e)=>{\n    console.log(\"Join Opened\", e);\n});\n$2e227c3de0f0a244$var$joinConnection.addEventListener(\"connectionstatechange\", (e)=>{\n    console.log(\"Connection State Change: \", e);\n    document.querySelector(\"#peer-container\")?.append((0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"p\", {\n        className: \"peer\",\n        innerText: e.target.connectionState\n    }));\n});\nconst $2e227c3de0f0a244$export$910fcebce2fbdb37 = ()=>{\n    document.querySelector(\"#lobby-page\")?.remove();\n    document.body.replaceChildren();\n};\nconst $2e227c3de0f0a244$export$6fc184788d935367 = ()=>{\n    const page = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"div\", {\n        id: \"lobby-page\"\n    });\n    const title = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"h1\", {\n        innerText: \"Lobby\",\n        className: \"lobby-header\"\n    });\n    const roomPasswordInput = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"input\", {\n        type: \"text\",\n        placeholder: \"What's the room password?\",\n        id: \"room-password\"\n    });\n    const hostButton = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"button\", {\n        className: \"big-button\",\n        innerText: \"Host\",\n        id: \"host\",\n        onclick: $2e227c3de0f0a244$var$onHost\n    });\n    const orSeparator = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"h1\", {\n        innerText: \"or\",\n        className: \"or-separator\"\n    });\n    const joinButton = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"button\", {\n        className: \"big-button\",\n        innerText: \"Join\",\n        id: \"join\",\n        onclick: $2e227c3de0f0a244$var$onJoin\n    });\n    page.append(title, roomPasswordInput, hostButton, orSeparator, joinButton);\n    document.body.appendChild(page);\n};\nconst $2e227c3de0f0a244$var$clearButtons = ()=>{\n    const lobbyPage = document.querySelector(\"#lobby-page\");\n    lobbyPage?.append((0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"h3\", {\n        innerText: \"Waiting...\",\n        className: \"status-message\"\n    }));\n    document.querySelector(\"#host\")?.remove();\n    document.querySelector(\".or-separator\")?.remove();\n    document.querySelector(\"#join\")?.remove();\n    lobbyPage?.append((0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"div\", {\n        id: \"peer-container\"\n    }));\n};\nconst $2e227c3de0f0a244$var$getUrl = ()=>{\n    const password = document.querySelector(\"#room-password\");\n    if (!password.value) {\n        password.style.border = \"1px solid red\";\n        setTimeout(()=>password.style.border = \"revert\", 1000);\n        return [];\n    }\n    // Share the offer\n    const baseUrl = \"https://demo.httprelay.io/link/\";\n    const hostSignalKey = `$master$${password.value}`;\n    const joinSignalKey = `$slave$${password.value}`;\n    return [\n        baseUrl + hostSignalKey,\n        baseUrl + joinSignalKey\n    ];\n};\nconst $2e227c3de0f0a244$var$onHost = async ()=>{\n    $2e227c3de0f0a244$var$clearButtons();\n    const [hostUrl, joinUrl] = $2e227c3de0f0a244$var$getUrl();\n    if (!hostUrl || !joinUrl) return;\n    const connectionState = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"p\", {\n        innerText: \"Connecting\",\n        className: \"peer\",\n        id: \"#connection\"\n    });\n    document.querySelector(\"#peer-container\")?.append(connectionState);\n    const offer = await $2e227c3de0f0a244$var$hostConnection.createOffer();\n    await $2e227c3de0f0a244$var$hostConnection.setLocalDescription(offer);\n    fetch(hostUrl, {\n        method: \"POST\",\n        body: JSON.stringify(offer)\n    }).then(()=>{\n        // The promise when the offer is picked up by the Joiner.\n        // We now wait for the joiner to submit their answer\n        fetch(joinUrl).then((res)=>res.json()).then(async (answer)=>{\n            await $2e227c3de0f0a244$var$hostConnection.setRemoteDescription(new RTCSessionDescription(answer));\n        });\n    });\n};\nconst $2e227c3de0f0a244$var$onJoin = ()=>{\n    $2e227c3de0f0a244$var$clearButtons();\n    const [hostUrl, joinUrl] = $2e227c3de0f0a244$var$getUrl();\n    if (!hostUrl || !joinUrl) return;\n    const connectionState = (0, $012f0d18ed44dc05$export$185802fd694ee1f5)(\"p\", {\n        innerText: \"Connecting\",\n        className: \"peer\",\n        id: \"#connection\"\n    });\n    document.querySelector(\"#peer-container\")?.append(connectionState);\n    fetch(hostUrl).then((res)=>res.json()).then(async (offer)=>{\n        await $2e227c3de0f0a244$var$joinConnection.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await $2e227c3de0f0a244$var$joinConnection.createAnswer();\n        await $2e227c3de0f0a244$var$joinConnection.setLocalDescription(answer);\n        await fetch(joinUrl, {\n            method: \"POST\",\n            body: JSON.stringify(answer)\n        });\n    });\n};\n\n\nwindow.onload = ()=>{\n    //renderTitle();\n    (0, $2e227c3de0f0a244$export$6fc184788d935367)();\n};\n\n})();\n//# sourceMappingURL=index.51b79781.js.map\n","import { renderLobby } from './pages/lobby/lobby';\r\nimport { renderTitle } from './pages/title/title';\r\n\r\nwindow.onload = () => {\r\n  //renderTitle();\r\n  renderLobby();\r\n};\r\n","import { create, getIp } from '../../helpers';\r\n\r\nconst hostConnection = new RTCPeerConnection({ iceServers: [] });\r\nconst hostChannel = hostConnection.createDataChannel('dc');\r\n\r\nhostConnection.addEventListener('connectionstatechange', (e: any) => {\r\n  console.log('Connection State Change: ', e);\r\n  document\r\n    .querySelector('#peer-container')\r\n    ?.append(create('p', { className: 'peer', innerText: e.target.connectionState }));\r\n});\r\nhostConnection.addEventListener('signalingstatechange', (e) => {\r\n  console.log('Signal State Change: ', e);\r\n});\r\nhostConnection.addEventListener('negotiationneeded', (e) => {\r\n  console.log('Negotiation Needed: ', e);\r\n});\r\nhostChannel.addEventListener('open', (e) => {\r\n  console.log('Host Opened', e);\r\n\r\n  document.querySelector('#peer-container')?.append(create('p', { innerText: 'peer', className: 'peer' }));\r\n});\r\nhostChannel.addEventListener('message', (e) => {\r\n  console.log('Data channel message', e);\r\n});\r\n\r\nconst joinConnection = new RTCPeerConnection({ iceServers: [] });\r\nconst joinChannel = joinConnection.createDataChannel('dc');\r\njoinChannel.addEventListener('open', (e) => {\r\n  console.log('Join Opened', e);\r\n});\r\njoinConnection.addEventListener('connectionstatechange', (e: any) => {\r\n  console.log('Connection State Change: ', e);\r\n  document\r\n    .querySelector('#peer-container')\r\n    ?.append(create('p', { className: 'peer', innerText: e.target.connectionState }));\r\n});\r\n\r\nexport const removeLobby = () => {\r\n  document.querySelector('#lobby-page')?.remove();\r\n  document.body.replaceChildren();\r\n};\r\n\r\nexport const renderLobby = () => {\r\n  const page = create('div', { id: 'lobby-page' });\r\n  const title = create('h1', { innerText: 'Lobby', className: 'lobby-header' });\r\n  const roomPasswordInput = create('input', {\r\n    type: 'text',\r\n    placeholder: \"What's the room password?\",\r\n    id: 'room-password',\r\n  });\r\n  const hostButton = create('button', { className: 'big-button', innerText: 'Host', id: 'host', onclick: onHost });\r\n  const orSeparator = create('h1', { innerText: 'or', className: 'or-separator' });\r\n  const joinButton = create('button', { className: 'big-button', innerText: 'Join', id: 'join', onclick: onJoin });\r\n  page.append(title, roomPasswordInput, hostButton, orSeparator, joinButton);\r\n  document.body.appendChild(page);\r\n};\r\n\r\nconst clearButtons = () => {\r\n  const lobbyPage = document.querySelector('#lobby-page');\r\n  lobbyPage?.append(create('h3', { innerText: 'Waiting...', className: 'status-message' }));\r\n  document.querySelector('#host')?.remove();\r\n  document.querySelector('.or-separator')?.remove();\r\n  document.querySelector('#join')?.remove();\r\n\r\n  lobbyPage?.append(create('div', { id: 'peer-container' }));\r\n};\r\n\r\nconst getUrl = () => {\r\n  const password = document.querySelector('#room-password') as HTMLInputElement;\r\n  if (!password.value) {\r\n    password.style.border = '1px solid red';\r\n    setTimeout(() => (password.style.border = 'revert'), 1000);\r\n    return [];\r\n  }\r\n  // Share the offer\r\n  const baseUrl = 'https://demo.httprelay.io/link/';\r\n  const hostSignalKey = `$master$${password.value}`;\r\n  const joinSignalKey = `$slave$${password.value}`;\r\n  return [baseUrl + hostSignalKey, baseUrl + joinSignalKey];\r\n};\r\n\r\nconst onHost = async () => {\r\n  clearButtons();\r\n  const [hostUrl, joinUrl] = getUrl();\r\n  if (!hostUrl || !joinUrl) return;\r\n  const connectionState = create('p', { innerText: 'Connecting', className: 'peer', id: '#connection' });\r\n  document.querySelector('#peer-container')?.append(connectionState);\r\n  const offer = await hostConnection.createOffer();\r\n  await hostConnection.setLocalDescription(offer);\r\n  fetch(hostUrl, { method: 'POST', body: JSON.stringify(offer) }).then(() => {\r\n    // The promise when the offer is picked up by the Joiner.\r\n    // We now wait for the joiner to submit their answer\r\n    fetch(joinUrl)\r\n      .then((res) => res.json())\r\n      .then(async (answer) => {\r\n        await hostConnection.setRemoteDescription(new RTCSessionDescription(answer));\r\n      });\r\n  });\r\n};\r\n\r\nconst onJoin = () => {\r\n  clearButtons();\r\n  const [hostUrl, joinUrl] = getUrl();\r\n  if (!hostUrl || !joinUrl) return;\r\n  const connectionState = create('p', { innerText: 'Connecting', className: 'peer', id: '#connection' });\r\n  document.querySelector('#peer-container')?.append(connectionState);\r\n  fetch(hostUrl)\r\n    .then((res) => res.json())\r\n    .then(async (offer) => {\r\n      await joinConnection.setRemoteDescription(new RTCSessionDescription(offer));\r\n      const answer = await joinConnection.createAnswer();\r\n      await joinConnection.setLocalDescription(answer);\r\n\r\n      await fetch(joinUrl, { method: 'POST', body: JSON.stringify(answer) });\r\n    });\r\n};\r\n","export const create = <K extends keyof HTMLElementTagNameMap>(tag: K, options?: Partial<HTMLElementTagNameMap[K]>) => {\r\n  const element = document.createElement(tag);\r\n  Object.assign(element, options);\r\n  return element;\r\n};\r\n\r\nexport const hashCode = (s: string) => {\r\n  return s.split('').reduce((a, b) => {\r\n    a = (a << 5) - a + b.charCodeAt(0);\r\n    return a & a;\r\n  }, 0);\r\n};\r\n\r\nexport const getIp = () => fetch('https://checkip.amazonaws.com/').then((r) => r.text());\r\n"],"names":["$012f0d18ed44dc05$export$185802fd694ee1f5","tag","options","element","document","createElement","Object","assign","$2e227c3de0f0a244$var$hostConnection","RTCPeerConnection","iceServers","$2e227c3de0f0a244$var$hostChannel","createDataChannel","addEventListener","e","console","log","querySelector","append","className","innerText","target","connectionState","$2e227c3de0f0a244$var$joinConnection","$2e227c3de0f0a244$var$joinChannel","$2e227c3de0f0a244$export$6fc184788d935367","page","id","title","roomPasswordInput","type","placeholder","hostButton","onclick","$2e227c3de0f0a244$var$onHost","orSeparator","joinButton","$2e227c3de0f0a244$var$onJoin","body","appendChild","$2e227c3de0f0a244$var$clearButtons","lobbyPage","remove","$2e227c3de0f0a244$var$getUrl","password","value","style","border","setTimeout","baseUrl","hostUrl","joinUrl","offer","createOffer","setLocalDescription","fetch","method","JSON","stringify","then","res","json","answer","setRemoteDescription","RTCSessionDescription","createAnswer","window","onload"],"version":3,"file":"index.51b79781.js.map"}